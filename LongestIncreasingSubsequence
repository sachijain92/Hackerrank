/*Problem Statement

The task is to find the length of the longest subsequence in a given array of integers such that all elements
of the subsequence are sorted in ascending order. For example, the length of the LIS for 
{ 15, 27, 14, 38, 26, 55, 46, 65, 85 } is 6 and the longest increasing subsequence is {15, 27, 38, 55, 65, 85}. 

Input Format
In the first line of input, there is a single number N. 
In the next N lines input the value of a[i].

Constraints 
1 ≤ N ≤ 106 
1 ≤ a[i] ≤ 105

Output Format
In a single line, output the length of the longest increasing sub-sequence.*/

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) throws IOException {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        int n=Integer.parseInt(br.readLine());
        int a[]=new int[n];
        for(int i=0;i<n;i++)
        {
                a[i]=Integer.parseInt(br.readLine());
        }
        int c[]=new int[n];
        
        for(int i=0;i<n;i++)
        {
                c[i]=1;
        }
        
        for(int j=1;j<n;j++)
        {
            
            for(int k=0;k<j;k++)
            {
                    if(a[j]>a[k])    
                            c[j]=Math.max(c[j],c[k]+1);
            }
       
        }
        int max=0;
        for(int i=0;i<n;i++)
        {
                if(c[i]>max)
                max=c[i];
        }
        System.out.print(max);
        
        
        
    }
}
